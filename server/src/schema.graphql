enum UserRole {
  USER
  ADMIN
}

enum Language {
  ENGLISH
  NORWEGIAN
}

type AuthenticationToken {
  accessToken: String!
  refreshToken: String!
}

input RegisterUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  termsAndPolicyAccepted: Boolean!
  language: Language!
}

type AuthenticationPayload {
  authenticationToken: AuthenticationToken!
  query: Query!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  language: Language
}

input LoginInput {
  email: String!
  password: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: UserRole!
  language: Language!
}

type UserPayload {
  user: User!
  query: Query!
}

input ResetPasswordInput {
  email: String!
}

input RefreshAccessTokenInput {
  refreshToken: String!
}

input UpdatePasswordInput {
  password: String!
}

type SuccessPayload {
  success: Boolean!
  query: Query!
}

type Query {
  hello: String!
  user(id: ID!): User!
}

type Mutation {
  registerUser(input: RegisterUserInput!): AuthenticationPayload!
  login(input: LoginInput!): AuthenticationPayload!
  refreshAccessToken(input: RefreshAccessTokenInput!): AuthenticationPayload!
  resetPassword(input: ResetPasswordInput!): SuccessPayload!
  updatePassword(id: ID!, token: String!, input: UpdatePasswordInput!): AuthenticationPayload!
  updateUser(id: ID!, input: UpdateUserInput!): UserPayload!
}
